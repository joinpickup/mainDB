name: Build and Deploy to GKE

on:
  push:
    branches: [main]

env:
  project_id: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: pickup
  GKE_ZONE: us-east1
  DEPLOYMENT_NAME: database

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: postgres
      ENVIRONMENT: production

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_email: ${{ secrets.GCP_EMAIL }}
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}

      # Configure Docker to use the gcloud command-line tool as a credential
      - run: gcloud auth configure-docker us-east1-docker.pkg.dev --quiet

      # Setup gcloud CLI
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      # Get the GKE credentials so we can deploy to the cluster
      - run: |-
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
      # Deploy sample image to the GKE cluster
      - name: Deploy
        run: |-
          cd iac
          export image="$IMAGE_NAME"
          envsubst < database.deployment.yaml > deploy.yaml
          kubectl apply -f deploy.yaml -f database.service.yaml
          kubectl get services -o wide
